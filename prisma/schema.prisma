// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Casino {
  id              String   @id @default(cuid())
  name            String   @unique
  slug            String   @unique
  website         String
  established     String?
  license         String[]
  logoUrl         String?
  bannerUrl       String?
  rating          Float    @default(0)
  reviewCount     Int      @default(0)
  isActive        Boolean  @default(true)
  isFeatured      Boolean  @default(false)
  description     String?
  shortDescription String?
  
  // SEO fields
  metaTitle       String?
  metaDescription String?
  seoKeywords     String[]
  canonicalUrl    String?
  
  // Casino specifics
  minDeposit      Float?
  maxPayout       Float?
  payoutTime      String?
  currencies      String[]
  languages       String[]
  regions         String[]
  
  // Ratings breakdown
  gamesRating     Float?
  bonusesRating   Float?
  securityRating  Float?
  supportRating   Float?
  mobileRating    Float?
  payoutsRating   Float?
  
  // Relations
  reviews         Review[]
  bonuses         Bonus[]
  games           CasinoGame[]
  paymentMethods  CasinoPaymentMethod[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("casinos")
}

model Review {
  id              String   @id @default(cuid())
  casinoId        String
  casino          Casino   @relation(fields: [casinoId], references: [id], onDelete: Cascade)
  
  title           String
  slug            String   @unique
  content         String
  excerpt         String?
  
  // Ratings
  overallRating   Float
  gamesRating     Float?
  bonusesRating   Float?
  securityRating  Float?
  supportRating   Float?
  mobileRating    Float?
  payoutsRating   Float?
  
  // Author info
  authorName      String
  authorTitle     String?
  authorAvatar    String?
  
  // SEO
  metaTitle       String?
  metaDescription String?
  keywords        String[]
  
  // Content structure
  pros            String[]
  cons            String[]
  verdict         String?
  
  // Status
  isPublished     Boolean  @default(false)
  publishedAt     DateTime?
  featuredImage   String?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("reviews")
}

model Bonus {
  id              String   @id @default(cuid())
  casinoId        String
  casino          Casino   @relation(fields: [casinoId], references: [id], onDelete: Cascade)
  
  title           String
  type            BonusType
  amount          String
  percentage      Float?
  maxAmount       Float?
  minDeposit      Float?
  wageringReq     Float?
  validDays       Int?
  
  // Bonus details
  description     String?
  termsAndConditions String?
  bonusCode       String?
  isExclusive     Boolean  @default(false)
  isActive        Boolean  @default(true)
  
  // Restrictions
  gameRestrictions String[]
  countryRestrictions String[]
  
  expiresAt       DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("bonuses")
}

enum BonusType {
  WELCOME
  NO_DEPOSIT
  FREE_SPINS
  RELOAD
  CASHBACK
  VIP
  TOURNAMENT
  OTHER
}

model Game {
  id              String   @id @default(cuid())
  name            String
  slug            String   @unique
  type            GameType
  provider        String
  rtp             Float?
  volatility      Volatility?
  maxWin          String?
  minBet          Float?
  maxBet          Float?
  
  // Game details
  description     String?
  features        String[]
  themes          String[]
  paylines        Int?
  reels           Int?
  
  // Media
  imageUrl        String?
  demoUrl         String?
  
  // SEO
  metaTitle       String?
  metaDescription String?
  keywords        String[]
  
  // Relations
  casinos         CasinoGame[]
  
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("games")
}

enum GameType {
  SLOT
  BLACKJACK
  ROULETTE
  POKER
  BACCARAT
  CRAPS
  KENO
  LOTTERY
  LIVE_DEALER
  OTHER
}

enum Volatility {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

model CasinoGame {
  id              String   @id @default(cuid())
  casinoId        String
  gameId          String
  casino          Casino   @relation(fields: [casinoId], references: [id], onDelete: Cascade)
  game            Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  
  isActive        Boolean  @default(true)
  isFeatured      Boolean  @default(false)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@unique([casinoId, gameId])
  @@map("casino_games")
}

model PaymentMethod {
  id              String   @id @default(cuid())
  name            String   @unique
  type            PaymentType
  processingTime  String?
  minDeposit      Float?
  maxDeposit      Float?
  minWithdrawal   Float?
  maxWithdrawal   Float?
  fees            String?
  
  description     String?
  logoUrl         String?
  isActive        Boolean  @default(true)
  
  // Relations
  casinos         CasinoPaymentMethod[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("payment_methods")
}

enum PaymentType {
  CREDIT_CARD
  DEBIT_CARD
  E_WALLET
  BANK_TRANSFER
  CRYPTOCURRENCY
  PREPAID_CARD
  OTHER
}

model CasinoPaymentMethod {
  id              String   @id @default(cuid())
  casinoId        String
  paymentMethodId String
  casino          Casino   @relation(fields: [casinoId], references: [id], onDelete: Cascade)
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id], onDelete: Cascade)
  
  isActive        Boolean  @default(true)
  processingTime  String?
  minAmount       Float?
  maxAmount       Float?
  fees            String?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@unique([casinoId, paymentMethodId])
  @@map("casino_payment_methods")
}

model BlogPost {
  id              String   @id @default(cuid())
  title           String
  slug            String   @unique
  content         String
  excerpt         String?
  category        String
  tags            String[]
  
  // Author info
  authorName      String
  authorTitle     String?
  authorAvatar    String?
  
  // SEO
  metaTitle       String?
  metaDescription String?
  keywords        String[]
  canonicalUrl    String?
  
  // Media
  featuredImage   String?
  gallery         String[]
  
  // Status
  isPublished     Boolean  @default(false)
  publishedAt     DateTime?
  readingTime     Int?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("blog_posts")
}

model Region {
  id              String   @id @default(cuid())
  name            String
  code            String   @unique
  country         String
  type            RegionType
  
  // Legal info
  gamblingLegal   Boolean  @default(true)
  legalAge        Int      @default(18)
  regulations     String?
  
  // SEO
  metaTitle       String?
  metaDescription String?
  keywords        String[]
  
  description     String?
  isActive        Boolean  @default(true)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("regions")
}

enum RegionType {
  COUNTRY
  STATE
  PROVINCE
  TERRITORY
  CITY
}

model SeoPage {
  id              String   @id @default(cuid())
  path            String   @unique
  title           String
  description     String?
  keywords        String[]
  canonicalUrl    String?
  
  // Open Graph
  ogTitle         String?
  ogDescription   String?
  ogImage         String?
  ogType          String?
  
  // Twitter Card
  twitterCard     String?
  twitterTitle    String?
  twitterDescription String?
  twitterImage    String?
  
  // Schema.org
  schemaMarkup    Json?
  
  // Indexing
  noIndex         Boolean  @default(false)
  noFollow        Boolean  @default(false)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("seo_pages")
}

model ContentTemplate {
  id              String   @id @default(cuid())
  name            String   @unique
  type            TemplateType
  template        String
  variables       String[]
  
  description     String?
  isActive        Boolean  @default(true)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("content_templates")
}

enum TemplateType {
  CASINO_REVIEW
  GAME_GUIDE
  BONUS_PAGE
  REGIONAL_PAGE
  COMPARISON_PAGE
  BLOG_POST
}

model AnalyticsEvent {
  id              String   @id @default(cuid())
  eventType       String
  eventData       Json
  userAgent       String?
  ipAddress       String?
  referrer        String?
  timestamp       DateTime @default(now())
  
  @@map("analytics_events")
}
